[{"/home/vm/Desktop/SOEN-341/client/src/index.js":"1","/home/vm/Desktop/SOEN-341/client/src/reportWebVitals.js":"2","/home/vm/Desktop/SOEN-341/client/src/App.js":"3","/home/vm/Desktop/SOEN-341/client/src/Components/Templates/test_create_post_form.js":"4","/home/vm/Desktop/SOEN-341/client/src/Components/index.js":"5","/home/vm/Desktop/SOEN-341/client/src/Components/Templates/Feed/PostFeed.js":"6","/home/vm/Desktop/SOEN-341/client/src/Components/Templates/Post/PostTemplate.js":"7","/home/vm/Desktop/SOEN-341/client/src/Components/Templates/Footer/Footer.js":"8","/home/vm/Desktop/SOEN-341/client/src/Components/Templates/Header/Header.js":"9","/home/vm/Desktop/SOEN-341/client/src/Components/Templates/Login/LoginTemplate.js":"10","/home/vm/Desktop/SOEN-341/client/src/Components/Templates/HomePage/HomePage.js":"11","/home/vm/Desktop/SOEN-341/client/src/Components/Templates/UserProfile/UserProfile.js":"12","/home/vm/Desktop/SOEN-341/client/src/Components/Templates/ContainedButtons.js":"13","/home/vm/Desktop/SOEN-341/client/src/Components/Templates/UserProfile/ProfileStats.js":"14"},{"size":501,"mtime":1614302909561,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1613314817175,"results":"17","hashOfConfig":"16"},{"size":979,"mtime":1614744480160,"results":"18","hashOfConfig":"16"},{"size":1618,"mtime":1614829688280,"results":"19","hashOfConfig":"16"},{"size":452,"mtime":1614309104641,"results":"20","hashOfConfig":"16"},{"size":700,"mtime":1614828482835,"results":"21","hashOfConfig":"16"},{"size":2663,"mtime":1614884342266,"results":"22","hashOfConfig":"16"},{"size":1492,"mtime":1614309104641,"results":"23","hashOfConfig":"16"},{"size":3056,"mtime":1614309104641,"results":"24","hashOfConfig":"16"},{"size":13446,"mtime":1614309104641,"results":"25","hashOfConfig":"16"},{"size":3918,"mtime":1614884510031,"results":"26","hashOfConfig":"16"},{"size":6542,"mtime":1614309104641,"results":"27","hashOfConfig":"16"},{"size":550,"mtime":1614302909561,"results":"28","hashOfConfig":"16"},{"size":349,"mtime":1614302909561,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"rjgfgh",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/vm/Desktop/SOEN-341/client/src/index.js",[],["61","62"],"/home/vm/Desktop/SOEN-341/client/src/reportWebVitals.js",[],"/home/vm/Desktop/SOEN-341/client/src/App.js",["63"],"import { useState } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport CreatePost from './Components/Templates/test_create_post_form';\nimport {LoginTemplate, HomePage, ProfileTemplate, UserProfile} from './Components/index';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState();\n\n  function handleUser(user){\n    setCurrentUser(user);\n  }\n\n  return (\n      <Router>\n      <div className=\"App\">\n        <Route exact path={[\"/\", \"/login\", \"/login#redirect\"]} >\n          <LoginTemplate handleUser={handleUser} currentUser={currentUser} />\n        </Route>\n        <Route exact path=\"/Home\" component={HomePage} />\n        <Route exact path=\"/post\" component={CreatePost}/>\n        <Route path=\"/UserProfile\">\n          <UserProfile  handleUser={handleUser} currentUser={currentUser} />\n        </Route>\n      </div>\n      </Router>\n  );\n}\n\nexport default App;\n","/home/vm/Desktop/SOEN-341/client/src/Components/Templates/test_create_post_form.js",[],"/home/vm/Desktop/SOEN-341/client/src/Components/index.js",[],"/home/vm/Desktop/SOEN-341/client/src/Components/Templates/Feed/PostFeed.js",[],"/home/vm/Desktop/SOEN-341/client/src/Components/Templates/Post/PostTemplate.js",[],"/home/vm/Desktop/SOEN-341/client/src/Components/Templates/Footer/Footer.js",[],"/home/vm/Desktop/SOEN-341/client/src/Components/Templates/Header/Header.js",[],"/home/vm/Desktop/SOEN-341/client/src/Components/Templates/Login/LoginTemplate.js",[],"/home/vm/Desktop/SOEN-341/client/src/Components/Templates/HomePage/HomePage.js",["64","65"],"/home/vm/Desktop/SOEN-341/client/src/Components/Templates/UserProfile/UserProfile.js",["66"],"//https://material-ui.com/getting-started/templates/blog/#\n\nimport { React, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\n\nimport {Header, PostFeed, Footer, Post} from '../../index';\nimport ContainedButtons from '../ContainedButtons';\nimport ProfileStats from './ProfileStats';\n\n//Hard coded test images\n//TODO link image fetch to db\nimport pepega from '../../../Images/Pepega.png';\nimport forever_alone from '../../../Images/forever_alone.jpg';\nimport meme_man from '../../../Images/meme_man.jpg';\nimport harold from '../../../Images/harold.jpg';\nimport pikachu from '../../../Images/shocked pikachu.png';\nimport logo from \"../../../Images/Logo.png\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    mainGrid: {\n        marginTop: theme.spacing(3),\n    },\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n    },\n    gridList: {\n        width: 500,\n        height: 450,\n    },\n    icon: {\n        color: 'rgba(255, 255, 255, 0.54)',\n    },\n}));\n\nconst sections = [\n    { title: 'Please', url: '#' },\n    { title: 'Give', url: '#' },\n    { title: 'Us', url: '#' },\n    { title: 'A', url: '#' },\n    { title: 'Good', url: '#' },\n    { title: 'Grade', url: '#' },\n    { title: 'Because', url: '#' },\n    { title: 'We', url: '#' },\n    { title: 'Worked', url: '#' },\n    { title: 'Hard', url: '#' },\n];\n\n\n//Combine this with backend DB\nconst post1 =\n    <Post\n        showActions={false}\n        author=\"Olivier\"\n        date=\"2021-02-11\"\n        title=\"forever alone\"\n        imagePath={forever_alone}\n        text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n    />\n\n\n\nconst posts = [post1];\n    //Gets the user profile to display it on top of page\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n\n    // User's past posts \n    const tileData = [\n        {\n            img: meme_man,\n            title: 'meme man',\n            author: user ? user.username : \"\",\n        },\n        {\n            img: harold,\n            title: 'harold',\n            author: user ? user.username : \"\",\n        },\n        {\n            img: pikachu,\n            title: 'shocked pikachu',\n            author: user ? user.username : \"\",\n        },\n        {\n            img: pepega,\n            title: 'pepega',\n            author: user ? user.username : \"\",\n        },\n        {\n            img: harold,\n            title: 'harold',\n            author: user ? user.username : \"\",\n        },\n        {\n            img: pikachu,\n            title: 'shocked pikachu',\n            author: user ? user.username : \"\",\n        },\n    \n    ];\n\n    //const profile = getFromBackend();\n    const profile = {\n        posts: tileData.length,\n        followers: 51289,\n        following: 9687\n    }\n\n\n\n\nexport default function UserProfile(props) {\n\n\n\n    // Checking the backend to see if the user is logged in\n    useEffect(() => {\n        if(localStorage.getItem(\"user\") === null)\n            window.location = \"/login#redirect\";\n    }, [])\n\n    const classes = useStyles();\n\n        // Checking the backend to see if the user is logged in\n    useEffect(() => {\n        if(localStorage.getItem(\"user\") === null)\n            window.location = \"/login#redirect\";\n    }, [])\n\n    return (\n        <div>\n            <CssBaseline />\n            <Container maxWidth=\"lg\">\n                <Header title=\"MemeSpace\" sections={sections} handleUser={props.handleUser} currentUser={props.currentUser} />\n                <feed>\n                    <a href=\"/Home\">\n                        <img src={logo} alt={props}/>\n                    </a>\n                    <h2>{user.username}</h2>\n                    <div className=\"profile-stats\">\n                        <ProfileStats posts={profile.posts} followers={profile.followers} following={profile.following} />\n                    </div>\n                    <Container>\n                        <ContainedButtons />\n                    </Container>\n                    <Grid container className={classes.mainGrid}>\n                        <PostFeed title=\"Profile Page\" posts={posts} />\n                    </Grid>\n\n                </feed>\n            </Container>\n            <Container>\n                <br></br>\n                <h3>Browse olders memes from {user.username}</h3>\n\n                <div className={classes.root}>\n                    <GridList cellHeight={180} className={classes.gridList}>\n                        <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\n                            {/* <ListSubheader component=\"div\">{user.username + \"'s\"} past memes</ListSubheader> */}\n                        </GridListTile>\n                        {tileData.map((tile) => (\n                            <GridListTile key={tile.img}>\n                                <img src={tile.img} alt={tile.title} />\n                                <GridListTileBar\n                                    title={tile.title}\n                                    subtitle={<span>by: {tile.author}</span>}\n                                    actionIcon={\n                                        <IconButton aria-label={`info about ${tile.title}`} className={classes.icon}>\n                                            <InfoIcon />\n                                        </IconButton>\n                                    }\n                                />\n                            </GridListTile>\n                        ))}\n                    </GridList>\n                </div>\n            </Container>\n\n            <Footer title=\"Footer\" description=\"This is a footer\" />\n        </div>\n    );\n}","/home/vm/Desktop/SOEN-341/client/src/Components/Templates/ContainedButtons.js",[],"/home/vm/Desktop/SOEN-341/client/src/Components/Templates/UserProfile/ProfileStats.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":4,"column":34,"nodeType":"73","messageId":"74","endLine":4,"endColumn":49},{"ruleId":"71","severity":1,"message":"75","line":67,"column":18,"nodeType":"73","messageId":"74","endLine":67,"endColumn":26},{"ruleId":"76","severity":1,"message":"77","line":88,"column":10,"nodeType":"78","endLine":88,"endColumn":12,"suggestions":"79"},{"ruleId":"71","severity":1,"message":"80","line":11,"column":8,"nodeType":"73","messageId":"74","endLine":11,"endColumn":21},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'ProfileTemplate' is defined but never used.","Identifier","unusedVar","'setPosts' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'posts'. Either include it or remove the dependency array.","ArrayExpression",["83"],"'ListSubheader' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},"Update the dependencies array to be: [posts]",{"range":"86","text":"87"},[3314,3316],"[posts]"]